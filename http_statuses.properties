ru.http.code.100=Continue
ru.http.status.100=сервер удовлетворён начальными сведениями о запросе, клиент может продолжать пересылать заголовки
ru.http.code.101=Switching Protocols
ru.http.status.101=Этот код отправляется в ответ на заголовок запроса Upgrade от клиента и указывает протокол, на который переключается сервер.
ru.http.code.102=Processing
ru.http.status.102=Сервер получил и обрабатывает запрос, но ответа пока нет.
ru.http.code.103=Early Hints
ru.http.status.103=Этот код в первую очередь предназначен для использования с заголовком Link, позволяя пользовательскому агенту начать предварительную загрузку ресурсов или осуществить предварительное соединение к источнику ресурсов, пока сервер готовит ответ.
ru.http.code.200=OK
ru.http.status.200=Запрос успешно выполнен. Значение результата «успех» зависит от метода HTTP: GET: Ресурс был получен и передан в теле сообщения. HEAD: Ответ содержит заголовки, но тела сообщения нет. PUT или POST: Ресурс, описывающий результат действия, передан в теле сообщения. TRACE: Тело сообщения содержит сообщение запроса, полученное сервером.
ru.http.code.201=Created
ru.http.status.201=Запрос выполнен успешно, и в результате был создан новый ресурс. Обычно это ответ, отправляемый на запросы POST или PUT.
ru.http.code.202=Accepted
ru.http.status.202=Запрос получен, но еще не обработан. Это «уклончивый» ответ, поскольку в HTTP нет возможности позже отправить асинхронный ответ с результатом обработки запроса. Этот код предназначен для случаев, когда запрос обрабатывается другим процессом или сервером, а также для пакетной обработки.
ru.http.code.203=Non-Authoritative Information
ru.http.status.203=Возвращенные метаданные не полностью совпадают с теми, которые доступны на исходном сервере, а получены из другого источника. Чаще всего это используется для зеркал или резервных копий ресурсов. За исключением таких случаев предпочтительнее использовать ответ 200 OK.
ru.http.code.204=No Content
ru.http.status.204=Для этого запроса нет содержимого для отправки, но заголовки ответа могут быть полезны. Пользовательский агент может использовать их для обновления закешированных заголовков, полученных ранее для этого ресурса.
ru.http.code.205=Reset Content
ru.http.status.205=Сообщает пользовательскому агенту, что необходимо сбросить отображение документа, который отправил этот запрос.
ru.http.code.206=Partial Content
ru.http.status.206=Этот код ответа используется, когда от клиента отправляется заголовок Range для запроса только части ресурса.
ru.http.code.207=Multi-Status
ru.http.status.207=Передаёт информацию о нескольких ресурсах в случаях, когда могут быть уместны несколько кодов состояния.
ru.http.code.208=Already Reported
ru.http.status.208=Используется внутри элемента ответа <dav:propstat>, чтобы избежать повторного перечисления «привязок» и дублирования данных.
ru.http.code.226=IM Used
ru.http.status.226=Используется для ответа на запросы GET в тех случаях, когда сервер хочет отправить только изменённую часть ресурса (то есть «дельту»).
ru.http.code.300=Multiple Choices
ru.http.status.300=У запроса более одного возможного ответа. Пользовательский агент или пользователь должен выбрать один из них. Не существует стандартизированного способа выбора одного из ответов, но рекомендуется использовать HTML-ссылки на возможные варианты, чтобы у пользователя была возможность выбора.
ru.http.code.301=Moved Permanently
ru.http.status.301=URL-адрес запрошенного ресурса был изменен навсегда. Новый URL-адрес указан в ответе.
ru.http.code.302=Found
ru.http.status.302=URI запрошенного ресурса был временно изменен. В будущем могут быть внесены дальнейшие изменения в URI. Следовательно, этот же URI должен использоваться клиентом в будущих запросах.
ru.http.code.303=See Other
ru.http.status.303=Клиенту необходимо получить запрошенный ресурс по другому URI с помощью запроса GET.
ru.http.code.304=Not Modified
ru.http.status.304=Этот код используется для целей кэширования. Он сообщает клиенту, что ответ не был изменен, поэтому клиент может продолжать использовать кэшированную версию ответа.
ru.http.code.305=Use Proxy
ru.http.status.305=Запрошенный ответ должен быть доступен через прокси. Этот код определен в предыдущей версии спецификации HTTP и в настоящее время устарел из-за проблем безопасности, связанных с внутренней настройкой прокси-сервера.
ru.http.code.306=unused
ru.http.status.306=Этот код ответа зарезервирован. Использовался в предыдущей версии спецификации HTTP/1.1.
ru.http.code.307=Temporary Redirect
ru.http.status.307=Клиенту необходимо получить запрошенный ресурс по другому URI тем же методом, который использовался в предыдущем запросе. Он имеет ту же семантику, что и код ответа 302 Found, за исключением того, что пользовательский агент не должен изменять используемый метод: если в первом запросе использовался POST, то POST должен использоваться и во втором запросе.
ru.http.code.308=Permanent Redirect
ru.http.status.308=Ресурс теперь находится по другому URI, указанному в заголовке ответа Location. Он имеет ту же семантику, что и код ответа 301 Moved Permanently, за исключением того, что пользовательский агент не должен изменять используемый метод: если в первом запросе использовался POST, то POST должен использоваться и во втором запросе.
ru.http.code.400=Bad Request
ru.http.status.400=Сервер не может или не будет обрабатывать запрос из-за чего-то, что воспринимается как ошибка клиента (например, неправильный синтаксис, формат или маршрутизация запроса).
ru.http.code.401=Unauthorized
ru.http.status.401=Хотя стандарт HTTP определяет этот ответ как «неавторизованный», семантически он означает «неаутентифицированный». Это значит, что клиент должен аутентифицировать себя, чтобы получить запрошенный ответ.
ru.http.code.402=Payment Required
ru.http.status.402=Этот код ответа зарезервирован для использования в будущем. Первоначальной целью создания этого кода было использование его для цифровых платежных систем, однако он используется очень редко и стандартного соглашения не существует.
ru.http.code.403=Forbidden
ru.http.status.403=Клиент не имеет прав доступа к контенту, то есть он неавторизован, поэтому сервер отказывается предоставить запрошенный ресурс. В отличие от 401 Unauthorized, личность клиента известна серверу.
ru.http.code.404=Not Found
ru.http.status.404=Сервер не может найти запрошенный ресурс. В браузере это означает, что URL-адрес не распознан. В API это также может означать, что адрес правильный, но ресурс не существует. Сервер также может отправить этот код ответа вместо 403 Forbidden, чтобы скрыть существование ресурса от неавторизованного клиента. Это самый известный код ответа из-за его частого появления в сети.
ru.http.code.405=Method Not Allowed
ru.http.status.405=Метод запроса известен серверу, но не поддерживается целевым ресурсом. Например, API может не разрешать вызов DELETE для удаления ресурса.
ru.http.code.406=Not Acceptable
ru.http.status.406=Сервер после выполнения согласования контента не нашёл содержимого, соответствующего критериям, заданным пользовательским агентом.
ru.http.code.407=Proxy Authentication Required
ru.http.status.407=Этот код ответа похож на 401 Unauthorized, но аутентификация должна выполняться через прокси-сервер.
ru.http.code.408=Request Timeout
ru.http.status.408=Сервер может отправить этот код ответа при неиспользовании соединения, даже без предварительного запроса со стороны клиента. Он означает, что сервер хотел бы закрыть это соединение. Этот ответ используется сравнительно часто, поскольку некоторые браузеры (такие как Chrome, Firefox 27+ или IE9) для ускорения используют механизмы предварительного подключения HTTP. Некоторые серверы просто закрывают соединение, не отправляя это сообщение.
ru.http.code.409=Conflict
ru.http.status.409=Запрос конфликтует с текущим состоянием сервера.
ru.http.code.410=Gone
ru.http.status.410=Запрошенное содержимое было удалено с сервера, и отсутствует возможность переадресации. Ожидается, что клиенты удалят свои кеши и ссылки на этот ресурс. Спецификация HTTP предполагает, что этот код ответа будет использоваться для «ограниченных по времени или рекламных услуг». API не обязаны указывать ресурсы, которые были удалены, с помощью этого кода.
ru.http.code.411=Length Required
ru.http.status.411=Запрос отклонён, потому что сервер требует указание поля заголовка Content-Length, но оно не определено.
ru.http.code.412=Precondition Failed
ru.http.status.412=Клиент указал в заголовках запроса условия, которым сервер не соответствует.
ru.http.code.413=Payload Too Large
ru.http.status.413=Размер объекта запроса превышает ограничения, определенные сервером. Сервер может закрыть соединение или вернуть поле заголовка Retry-After.
ru.http.code.414=URI Too Long
ru.http.status.414=Запрошенный клиентом URI слишком длинный для того, чтобы сервер смог его обработать.
ru.http.code.415=Unsupported Media Type
ru.http.status.415=Запрос отклонён, потому что медиа формат запрашиваемых данных не поддерживается сервером.
ru.http.code.416=Range Not Satisfiable
ru.http.status.416=Сервер не может корректно обработать запрос с учётом диапазона, указанного в поле заголовка Range.
ru.http.code.417=Expectation Failed
ru.http.status.417=Сервер не может выполнить ожидание, указанное в поле заголовка запроса Expect.
ru.http.code.418=I'm a teapot
ru.http.status.418=«Шуточный» ответ: сервер отклоняет попытку заварить кофе в чайнике.
ru.http.code.421=Misdirected Request
ru.http.status.421=Сервер не может дать ответ. Возможно сервер не настроен для комбинации схемы и полномочий, указанных в URI запроса.
ru.http.code.422=Unprocessable Content (WebDAV)
ru.http.status.422=Запрос сформирован правильно, но его невозможно выполнить из-за семантических ошибок.
ru.http.code.423=Locked (WebDAV)
ru.http.status.423=Запрашиваемый ресурс заблокирован.
ru.http.code.424=Failed Dependency (WebDAV)
ru.http.status.424=Запрос не выполнен из-за проблем в предыдущем запросе.
ru.http.code.425=Too Early
ru.http.status.425=Клиент отправил порцию данных слишком рано, до того как сервер установил безопасное соединение.
ru.http.code.426=Upgrade Required
ru.http.status.426=Сервер отказывается выполнять запрос с использованием текущего протокола, но может быть готов сделать это после смены протокола на указанный в заголовке ответа Upgrade.
ru.http.code.428=Precondition Required
ru.http.status.428=Сервер требует, чтобы запрос содержал условия. Этот ответ предназначен для предотвращения проблемы одновременного изменения ресурса несколькими пользователями.
ru.http.code.429=Too Many Requests
ru.http.status.429=Пользователь отправил слишком много запросов в определённый промежуток времени.
ru.http.code.431=Request Header Fields Too Large
ru.http.status.431=Сервер не будет обрабатывать запрос, потому что поля заголовка слишком велики. Запрос может быть отправлен повторно после уменьшения размера полей заголовка.
ru.http.code.451=Unavailable For Legal Reasons
ru.http.status.451=Пользовательский агент запросил ресурс, который не может быть предоставлен по закону, например веб-страницу, подвергнутую цензуре со стороны правительства.
ru.http.code.500=Internal Server Error
ru.http.status.500=На сервере произошла ошибка, в результате которой он не может успешно обработать запрос.
ru.http.code.501=Not Implemented
ru.http.status.501=Метод запроса не поддерживается сервером и поэтому он не может быть обработан. Методы GET и HEAD должны всегда поддерживаться сервером и для них не должен возвращаться этот код.
ru.http.code.502=Bad Gateway
ru.http.status.502=Такой ответ может прислать сервер, который выступает в качестве шлюза, если в процессе обработки запроса он получил недопустимый ответ от целевого сервера.
ru.http.code.503=Service Unavailable
ru.http.status.503=Сервер не готов обработать запрос в данный момент. Распространёнными причинами являются техническое обслуживание или перегрузка сервера. Вместе с таким ответом следует отправлять удобную для пользователя страницу с объяснением проблемы, а также HTTP-заголовок Retry-After с расчётным временем решения проблемы. Кроме того, полезно отправлять заголовки с информацией о кешировании, поскольку эти временные ответы обычно не следует кэшировать.
ru.http.code.504=Gateway Timeout
ru.http.status.504=Такой ответ может прислать сервер, который выступает в качестве шлюза, если в процессе обработки запроса он не может вовремя получить ответ от целевого сервера.
ru.http.code.505=HTTP Version Not Supported
ru.http.status.505=Используемая в запросе версия HTTP не поддерживается сервером.
ru.http.code.506=Variant Also Negotiates
ru.http.status.506=На сервере произошла внутренняя ошибка конфигурации: выбранный в процессе согласования вариант ресурса не является подходящим.
ru.http.code.507=Insufficient Storage (WebDAV)
ru.http.status.507=Запрос не выполнен, потому что серверу не удалось сохранить данные.
ru.http.code.508=Loop Detected (WebDAV)
ru.http.status.508=Запрос не выполнен, потому что на сервере был обнаружен бесконечный цикл обработки данных.
ru.http.code.510=Not Extended
ru.http.status.510=Для выполнения запроса необходимо его расширить.
ru.http.code.511=Network Authentication Required
ru.http.status.511=Клиенту необходимо пройти аутентификацию для получения доступа к сети.

en.http.code.100=Continue
en.http.status.100=This interim response indicates that the client should continue the request or ignore the response if the request is already finished.
en.http.code.101=Switching Protocols
en.http.status.101=This code is sent in response to an Upgrade request header from the client and indicates the protocol the server is switching to.
en.http.code.102=Processing
en.http.status.102=This code was used in WebDAV contexts to indicate that a request has been received by the server, but no status was available at the time of the response.
en.http.code.103=Early Hints
en.http.status.103=This status code is primarily intended to be used with the Link header, letting the user agent start preloading resources while the server prepares a response or preconnect to an origin from which the page will need resources.
en.http.code.200=OK
en.http.status.200=The request succeeded. The result and meaning of "success" depends on the HTTP method: GET: The resource has been fetched and transmitted in the message body. HEAD: Representation headers are included in the response without any message body. PUT or POST: The resource describing the result of the action is transmitted in the message body. TRACE: The message body contains the request as received by the server.
en.http.code.201=Created
en.http.status.201=The request succeeded, and a new resource was created as a result. This is typically the response sent after POST requests, or some PUT requests.
en.http.code.202=Accepted
en.http.status.202=The request has been received but not yet acted upon. It is noncommittal, since there is no way in HTTP to later send an asynchronous response indicating the outcome of the request. It is intended for cases where another process or server handles the request, or for batch processing.
en.http.code.203=Non-Authoritative Information
en.http.status.203=This response code means the returned metadata is not exactly the same as is available from the origin server, but is collected from a local or a third-party copy. This is mostly used for mirrors or backups of another resource. Except for that specific case, the 200 OK response is preferred to this status.
en.http.code.204=No Content
en.http.status.204=There is no content to send for this request, but the headers are useful. The user agent may update its cached headers for this resource with the new ones.
en.http.code.205=Reset Content
en.http.status.205=Tells the user agent to reset the document which sent this request.
en.http.code.206=Partial Content
en.http.status.206=This response code is used in response to a range request when the client has requested a part or parts of a resource.
en.http.code.207=Multi-Status
en.http.status.207=Conveys information about multiple resources, for situations where multiple status codes might be appropriate.
en.http.code.208=Already Reported
en.http.status.208=Used inside a <dav:propstat> response element to avoid repeatedly enumerating the internal members of multiple bindings to the same collection.
en.http.code.226=IM Used
en.http.status.226=The server has fulfilled a GET request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance.
en.http.code.300=Multiple Choices
en.http.status.300=In agent-driven content negotiation, the request has more than one possible response and the user agent or user should choose one of them. There is no standardized way for clients to automatically choose one of the responses, so this is rarely used.
en.http.code.301=Moved Permanently
en.http.status.301=The URL of the requested resource has been changed permanently. The new URL is given in the response.
en.http.code.302=Found
en.http.status.302=This response code means that the URI of requested resource has been changed temporarily. Further changes in the URI might be made in the future, so the same URI should be used by the client in future requests.
en.http.code.303=See Other
en.http.status.303=The server sent this response to direct the client to get the requested resource at another URI with a GET request.
en.http.code.304=Not Modified
en.http.status.304=This is used for caching purposes. It tells the client that the response has not been modified, so the client can continue to use the same cached version of the response.
en.http.code.305=Use Proxy
en.http.status.305=Defined in a previous version of the HTTP specification to indicate that a requested response must be accessed by a proxy. It has been deprecated due to security concerns regarding in-band configuration of a proxy.
en.http.code.306=unused
en.http.status.306=This response code is no longer used; but is reserved. It was used in a previous version of the HTTP/1.1 specification.
en.http.code.307=Temporary Redirect
en.http.status.307=The server sends this response to direct the client to get the requested resource at another URI with the same method that was used in the prior request. This has the same semantics as the 302 Found response code, with the exception that the user agent must not change the HTTP method used: if a POST was used in the first request, a POST must be used in the redirected request.
en.http.code.308=Permanent Redirect
en.http.status.308=This means that the resource is now permanently located at another URI, specified by the Location response header. This has the same semantics as the 301 Moved Permanently HTTP response code, with the exception that the user agent must not change the HTTP method used: if a POST was used in the first request, a POST must be used in the second request.
en.http.code.400=Bad Request
en.http.status.400=The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).
en.http.code.401=Unauthorized
en.http.status.401=Although the HTTP standard specifies "unauthorized", semantically this response means "unauthenticated". That is, the client must authenticate itself to get the requested response.
en.http.code.402=Payment Required
en.http.status.402=The initial purpose of this code was for digital payment systems, however this status code is rarely used and no standard convention exists.
en.http.code.403=Forbidden
en.http.status.403=The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.
en.http.code.404=Not Found
en.http.status.404=The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.
en.http.code.405=Method Not Allowed
en.http.status.405=The request method is known by the server but is not supported by the target resource. For example, an API may not allow DELETE on a resource, or the TRACE method entirely.
en.http.code.406=Not Acceptable
en.http.status.406=This response is sent when the web server, after performing server-driven content negotiation, doesn't find any content that conforms to the criteria given by the user agent.
en.http.code.407=Proxy Authentication Required
en.http.status.407=This is similar to 401 Unauthorized but authentication is needed to be done by a proxy.
en.http.code.408=Request Timeout
en.http.status.408=This response is sent on an idle connection by some servers, even without any previous request by the client. It means that the server would like to shut down this unused connection. This response is used much more since some browsers use HTTP pre-connection mechanisms to speed up browsing. Some servers may shut down a connection without sending this message.
en.http.code.409=Conflict
en.http.status.409=This response is sent when a request conflicts with the current state of the server. In WebDAV remote web authoring, 409 responses are errors sent to the client so that a user might be able to resolve a conflict and resubmit the request.
en.http.code.410=Gone
en.http.status.410=This response is sent when the requested content has been permanently deleted from server, with no forwarding address. Clients are expected to remove their caches and links to the resource. The HTTP specification intends this status code to be used for "limited-time, promotional services". APIs should not feel compelled to indicate resources that have been deleted with this status code.
en.http.code.411=Length Required
en.http.status.411=Server rejected the request because the Content-Length header field is not defined and the server requires it.
en.http.code.412=Precondition Failed
en.http.status.412=In conditional requests, the client has indicated preconditions in its headers which the server does not meet.
en.http.code.413=Payload Too Large
en.http.status.413=The request body is larger than limits defined by server. The server might close the connection or return an Retry-After header field.
en.http.code.414=URI Too Long
en.http.status.414=The URI requested by the client is longer than the server is willing to interpret.
en.http.code.415=Unsupported Media Type
en.http.status.415=The media format of the requested data is not supported by the server, so the server is rejecting the request.
en.http.code.416=Range Not Satisfiable
en.http.status.416=The ranges specified by the Range header field in the request cannot be fulfilled. It's possible that the range is outside the size of the target resource's data.
en.http.code.417=Expectation Failed
en.http.status.417=This response code means the expectation indicated by the Expect request header field cannot be met by the server.
en.http.code.418=I'm a teapot
en.http.status.418=The server refuses the attempt to brew coffee with a teapot.
en.http.code.421=Misdirected Request
en.http.status.421=The request was directed at a server that is not able to produce a response. This can be sent by a server that is not configured to produce responses for the combination of scheme and authority that are included in the request URI.
en.http.code.422=Unprocessable Content (WebDAV)
en.http.status.422=The request was well-formed but was unable to be followed due to semantic errors.
en.http.code.423=Locked (WebDAV)
en.http.status.423=The resource that is being accessed is locked.
en.http.code.424=Failed Dependency (WebDAV)
en.http.status.424=The request failed due to failure of a previous request.
en.http.code.425=Too Early
en.http.status.425=Indicates that the server is unwilling to risk processing a request that might be replayed.
en.http.code.426=Upgrade Required
en.http.status.426=The server refuses to perform the request using the current protocol but might be willing to do so after the client upgrades to a different protocol. The server sends an Upgrade header in a 426 response to indicate the required protocol(s).
en.http.code.428=Precondition Required
en.http.status.428=The origin server requires the request to be conditional. This response is intended to prevent the 'lost update' problem, where a client GETs a resource's state, modifies it and PUTs it back to the server, when meanwhile a third party has modified the state on the server, leading to a conflict.
en.http.code.429=Too Many Requests
en.http.status.429=The user has sent too many requests in a given amount of time (rate limiting).
en.http.code.431=Request Header Fields Too Large
en.http.status.431=The server is unwilling to process the request because its header fields are too large. The request may be resubmitted after reducing the size of the request header fields.
en.http.code.451=Unavailable For Legal Reasons
en.http.status.451=The user agent requested a resource that cannot legally be provided, such as a web page censored by a government.
en.http.code.500=Internal Server Error
en.http.status.500=The server has encountered a situation it does not know how to handle. This error is generic, indicating that the server cannot find a more appropriate 5XX status code to respond with.
en.http.code.501=Not Implemented
en.http.status.501=The request method is not supported by the server and cannot be handled. The only methods that servers are required to support (and therefore that must not return this code) are GET and HEAD.
en.http.code.502=Bad Gateway
en.http.status.502=This error response means that the server, while working as a gateway to get a response needed to handle the request, got an invalid response.
en.http.code.503=Service Unavailable
en.http.status.503=The server is not ready to handle the request. Common causes are a server that is down for maintenance or that is overloaded. Note that together with this response, a user-friendly page explaining the problem should be sent. This response should be used for temporary conditions and the Retry-After HTTP header should, if possible, contain the estimated time before the recovery of the service. The webmaster must also take care about the caching-related headers that are sent along with this response, as these temporary condition responses should usually not be cached.
en.http.code.504=Gateway Timeout
en.http.status.504=This error response is given when the server is acting as a gateway and cannot get a response in time.
en.http.code.505=HTTP Version Not Supported
en.http.status.505=The HTTP version used in the request is not supported by the server.
en.http.code.506=Variant Also Negotiates
en.http.status.506=The server has an internal configuration error: during content negotiation, the chosen variant is configured to engage in content negotiation itself, which results in circular references when creating responses.
en.http.code.507=Insufficient Storage (WebDAV)
en.http.status.507=The method could not be performed on the resource because the server is unable to store the representation needed to successfully complete the request.
en.http.code.508=Loop Detected (WebDAV)
en.http.status.508=The server detected an infinite loop while processing the request.
en.http.code.510=Not Extended
en.http.status.510=The client request declares an HTTP Extension (RFC 2774) that should be used to process the request, but the extension is not supported.
en.http.code.511=Network Authentication Required
en.http.status.511=Indicates that the client needs to authenticate to gain network access.